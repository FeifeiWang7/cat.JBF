/proc is very special in that it is a virtual filesystem. 

It's sometimes referred to as a process information pseudo-file system. 

It doesn't contain 'real' files but runtime system information (e.g. system memory, devices mounted, hardware configuration, etc). 

For this reason it can be regarded as a control and information centre for the kernel. 

In fact, quite a lot of system utilities are simply calls to files in this directory. For example, 'lsmod' is the same as 'cat /proc/modules' while 'lspci' is a synonym for 'cat /proc/pci'. 

By altering files located in this directory you can even read/change kernel parameters (sysctl) while the system is running.

The most distinctive thing about files in this directory is the fact that all of them have a file size of 0, with the exception of kcore, mtrr and self.

Each of the numbered directories corresponds to an actual process ID. 

The purpose and contents of each of these files:

use "man proc" for more detailed description, and use "cat XXX" for its content.

/proc/PID/fd   // **********used in the example **********
This is a subdirectory containing one entry for each file which the process has open, named by its file descriptor, and which is a symbolic link to the actual file. Thus, 0 standard input, 1 standard output, 2 standard error, etc.


/proc/PID/cmdline
Command line arguments.

/proc/PID/cpu
Current and last cpu in which it was executed.

/proc/PID/cwd
Link to the current working directory.

/proc/PID/environ
Values of environment variables.

/proc/PID/exe
Link to the executable of this process.

/proc/PID/maps
Memory maps to executables and library files.

/proc/PID/mem
Memory held by this process.

/proc/PID/stat
Process status.

/proc/PID/statm
Process memory status information.

/proc/PID/status
Process status in human readable form.

